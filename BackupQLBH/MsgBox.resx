<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVapVA0mhKjFLoSlES6EpREuhKURLoSlES6EpREuh
        KURLoSlES6EpREuhKURLoSlESp8rMFWqVQMAAAAAUaEoE0uhK8NKoSv/SqEr/0qhK/9KoSv/SqEr/0qh
        K/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSzBS6UtEUqiK6FKoSv/SqEr/0qhK/9KoSvPSqEqZ0qh
        K/VKoSv/SqEr/0qhK8lKoSyYSqEr/0qhK/9KoSv/SqEr/0qhLJ5KoSvrSqEr/0qhK/9KoSvPUaEoEwAA
        AABIoCpDSqEr9kqhK/9JoiuZS6IqVUqhK/9KoSv/SqEr/0qhK/9KoSvqSqEr50qhK/9KoSv/SqIrYEuh
        K2pJpC4cS6IqVUmhK65KoSv/SaIrmUuiKlVKoSv/SqEr/0qhK/9KoSv/SaEr5UmgK4RKoSv/SqEr/0qh
        K/9KoSvMS54tIkqhK/9KoSv/SqEoJkmhKklLoC0zTaIrHkqhK9pKoSv/SqEr/0qiK4NVqlUDSqIshkqh
        K/hKoSv/SqErzEueLSJKoSv/SqEr/0qhK8ROnScNAAAAAEqiK45KoSv/SqEr+kmhK4hVqlUDAAAAAAAA
        AABKoSqjSqEr/0qiK/BKoSuVSqEr/0qhK/9KoSv/SqEryEmhK6BKoSv/SqEr/0qhK9AAAAAAAAAAAAAA
        AAAAAAAATKEvG0qhK9FKoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9LoSuTAAAAAAAA
        AAAAAAAAAAAAAAAAAABVqlUDRp4sHUmkLhxKoSvWSqEr/0qhK/9KoSv/SqEr/0qhK/9KoSvvTaIrHgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATKEvG0miK79KoSv/SqEr/0qhK/9KoSvYTKEtOQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASqEoJkuhKURNoykyAP8AAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAIABAAAEAAAADiAAAB4gAAAE8AAAhGEAAMAD
        AADgAwAA/AcAAP4PAAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEai
        LgtJoCteSqArnEqhLKpKoSyqSqEsqkqhLKpKoSyqSqEsqkqhLKpKoSyqSqEsqkqhLKpKoSyqSqEsqkqh
        LKpKoSyqSqEsqkqhLKpKoSyqSqEsqkqhLKpKoSyqSqErm0uhLFxNmTMKAAAAAAAAAAAAAAAAAAAAAAAA
        AABLoCtOSqEr5kqhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qh
        K/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK+RLoCxLAAAAAAAA
        AAAAAAAASqIrWkqhK/1KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qh
        K/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qh
        K/xJoSxXAAAAAEifKCBKoSv3SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/dKoiuhSqIr3Uqh
        K/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSvWS6IspEqhK/xKoSv/SqEr/0qhK/9KoSv/SqEr/0qh
        K/9KoSv/SqEr/0qhK/VNoiseS6Erk0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv3S6IrRwAA
        AABGoi4WSqEs00qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0ujKj0AAAAASqErtkqhK/9KoSv/SqEr/0qh
        K/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qiKpFKoSvcSqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr90ui
        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
        K2tKoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSzBM5kzBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEugLHRKoSv8SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEswUec
        KxIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEiiKzxKoSvJSqEr/0qhK/9KoSv/SqEr/0qhK/9KoSv/SqEr60uh
        K3dVqisGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKnyswSqEsdUmhK6BKoSumS6AsjEug
        K05JkiQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////+AAAH+AAAAfAAAADgAAAAQBw
        GAAA+BgAAfwYAAH+GAABNhgAgDDbAYAw/wHAMH4D8DA8D/AwGA/4AAAP/AAAH/4AAB//8AA///gAP//8
        AH///gH////H////////////////////////////
</value>
  </data>
</root>